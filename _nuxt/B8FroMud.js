import{C as d,D as m,j as y,r as f,E as v,o as r,c as i,t as o,y as l,a as x,n as g}from"./BXHyvw0B.js";const u={},C="",h="",w="icons";function _(t){return t.toLowerCase().replace(/\.svg$/,"").replace(/[^a-z0-9-:]/g,"-").replace(/:/g,"--")}const p=async t=>{let[e,s]=t.split("/");s||(s=e,e=w);const n=u[e]?await u[e]():"";return{sprite:e,icon:s,url:n+`#${_(s)}`,class:`${C} ${h}${e}`}};function B(t){return d(()=>{var s;const e=(s=m())==null?void 0:s.appContext.app.$nuxt;return e?e.runWithContext(t):t()})}const S=["viewBox"],$={key:0},N={key:1},k=["href"],D=y({__name:"svg-icon",props:{name:{type:String,required:!0},title:{type:String,default:null},desc:{type:String,default:null},viewBox:{type:String,default:null,validator(t){return t.split(" ").every(e=>!isNaN(parseInt(e)))}}},async setup(t){let e,s;const n=t,a=f({url:"",class:""});return a.value=([e,s]=B(()=>p(n.name)),e=await e,s(),e),v(()=>n.name,async c=>{a.value=await p(c)}),(c,A)=>(r(),i("svg",{viewBox:t.viewBox,class:g(a.value.class)},[t.title?(r(),i("title",$,o(t.title),1)):l("",!0),t.desc?(r(),i("desc",N,o(t.desc),1)):l("",!0),x("use",{href:a.value.url},null,8,k)],10,S))}});export{D as _};
